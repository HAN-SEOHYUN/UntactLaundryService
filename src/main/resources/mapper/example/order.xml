<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
         "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ez.launer.laundryService.order.model.OrderDAO">
	<!--박권순 시작-->
	<!--박권순 시작-->
	<!--박권순 시작-->
	<!--박권순 시작-->
    <!--주문 상세 리스트  조회-->
    <select id="selectOrderDetails" parameterType="int" resultType="hashMap">
        select * from ORDER_DETAIL_VIEW
        where ORDER_NO = #{orderNo}
    </select>

    <!--지점에 해당하는 주문 view 리턴--><!--
    <select id="orderOfficeView" parameterType="orderListSearchVo" resultType="hashMap">-->
    <select id="orderOfficeView" parameterType="orderListSearchVo" resultMap="orderDeliveryAll">
        select * from (
            select ROWNUM as RNUM, A.*
            from
            (
                select * from ORDERS_OFFICENO_VIEW
                where OFFICE_NO = #{officeNo}
                  and ORDER_STATUS_NO = #{orderStatusNo}
                  and ${listType} is null
                  and PAYMENT_DATE is not null
            ) A
        ) B
        where RNUM > #{firstRecordIndex}
        <![CDATA[
			and RNUM <= #{firstRecordIndex} + #{recordCountPerPage}
		]]>
    </select>

    <!--지점에 해당하는 주문 view 전체 개수-->
    <select id="orderCount" parameterType="orderListSearchVo" resultType="int">
        select count(*) from ORDERS_OFFICENO_VIEW
        where OFFICE_NO = #{officeNo}
          and ORDER_STATUS_NO = #{orderStatusNo}
          and ${listType} is null
 		  and PAYMENT_DATE is not null
    </select>



    <resultMap type="OrderDeliveryAllVO" id="orderDeliveryAll">	<!-- id는 resultMap 들어갈 이름 -->
        <association property="orderOfficeView" column="no" javaType="map">
            <id column="no" jdbcType="BIGINT" property="NO"/>
            <result column="name" jdbcType="VARCHAR" property="NAME"/>
            <result column="users_no" jdbcType="BIGINT" property="USERS_NO"/>
            <result column="users_address_no" jdbcType="BIGINT" property="USERS_ADDRESS_NO"/>
            <result column="order_status_no" jdbcType="BIGINT" property="ORDER_STATUS_NO"/>
            <result column="payment_date" jdbcType="TIMESTAMP" property="PAYMENT_DATE"/>
            <result column="pickup_driver" jdbcType="VARCHAR" property="PICKUP_DRIVER"/>
            <result column="delivery_driver" jdbcType="VARCHAR" property="DELIVERY_DRIVER"/>
            <result column="office_no" jdbcType="BIGINT" property="OFFICE_NO"/>
            <result column="total_price" jdbcType="BIGINT" property="TOTAL_PRICE"/>
            <result column="order_request" jdbcType="VARCHAR" property="ORDER_REQUEST"/>
            <result column="lat_y" jdbcType="DOUBLE" property="LAT_Y"/>
            <result column="lon_x" jdbcType="DOUBLE" property="LON_X"/>
            <result column="address" jdbcType="VARCHAR" property="ADDRESS"/>
            <result column="address_detail" jdbcType="VARCHAR" property="ADDRESS_DETAIL"/>
            <result column="sum" jdbcType="BIGINT" property="SUM"/>
        </association>
        <collection property="orderDetails" column="no"
                    javaType="ArrayList" ofType="map" select="selectOrderDetails">
        </collection>
    </resultMap>

	<!-- 수거/배송리스트를 내 할일로 업데이트 하기 이전에 해당 리스트가 유효한 리스트인지 확인 -->
	<!-- 수거/배송리스트 => 내 할일로 업데이트 -->
	<update id="updateOrder" parameterType="orderDeliveryVO">
		update ORDERS
		set ORDER_STATUS_NO = #{orderStatusNo}, ${typeStatus} = #{deliveryNo}
		where NO = #{no} and ${typeStatus} is null
	</update>

	<!-- 배송기사의 내 할일(수거/배송) 개수 찾기 -->
	<select id="countOrderByDeliveryNo" parameterType="orderDeliveryVO" resultType="int">
		select count(*) from ORDERS
		where ${typeStatus} = #{deliveryNo} and ORDER_STATUS_NO = #{orderStatusNo}
	</select>

	<!-- 내 할일(수거/배송) 리스트 찾기-->
	<select id="selectByDeliveryNo" parameterType="map" resultMap="orderAllByDeliveryNo">
		select * from ORDERS_OFFICENO_VIEW
		where OFFICE_NO = #{officeNo}
		  and ORDER_STATUS_NO = #{orderStatusNo}
		  and ${typeStatus} = #{deliveryNo}
	</select>

	<resultMap id="orderAllByDeliveryNo" type="OrderDeliveryAllVO">
		<association property="orderOfficeView" column="no" javaType="map">
			<id column="no" jdbcType="BIGINT" property="NO"/>
			<result column="name" jdbcType="VARCHAR" property="NAME"/>
			<result column="users_no" jdbcType="BIGINT" property="USERS_NO"/>
			<result column="users_address_no" jdbcType="BIGINT" property="USERS_ADDRESS_NO"/>
			<result column="order_status_no" jdbcType="BIGINT" property="ORDER_STATUS_NO"/>
			<result column="payment_date" jdbcType="TIMESTAMP" property="PAYMENT_DATE"/>
			<result column="pickup_driver" jdbcType="VARCHAR" property="PICKUP_DRIVER"/>
			<result column="delivery_driver" jdbcType="VARCHAR" property="DELIVERY_DRIVER"/>
			<result column="office_no" jdbcType="BIGINT" property="OFFICE_NO"/>
			<result column="total_price" jdbcType="BIGINT" property="TOTAL_PRICE"/>
			<result column="order_request" jdbcType="VARCHAR" property="ORDER_REQUEST"/>
			<result column="lat_y" jdbcType="DOUBLE" property="LAT_Y"/>
			<result column="lon_x" jdbcType="DOUBLE" property="LON_X"/>
			<result column="address" jdbcType="VARCHAR" property="ADDRESS"/>
			<result column="address_detail" jdbcType="VARCHAR" property="ADDRESS_DETAIL"/>
			<result column="sum" jdbcType="BIGINT" property="SUM"/>
		</association>
		<collection property="orderDetails" column="no"
					javaType="ArrayList" ofType="map" select="selectOrderDetails">
		</collection>
	</resultMap>


	<update id="updateOrderStatus" parameterType="map">
		update ORDERS
		<choose>
			<when test="orderStatusNo == 1 or orderStatusNo == 4">
				set ORDER_STATUS_NO = #{orderStatusNo},
				<if test="orderStatusNo == 1">
					PICKUP_DRIVER = null
				</if>
				<if test="orderStatusNo == 4">
					DELIVERY_DRIVER = null
				</if>
			</when>
			<otherwise>
				set ORDER_STATUS_NO = #{orderStatusNo}
			</otherwise>
		</choose>
		where NO = #{orderNo}
	</update>
	<!--박권순 마지막-->
	<!--박권순 마지막-->
	<!--박권순 마지막-->
	<!--박권순 마지막-->
    
  
    <select id="selectUsersOrderView" parameterType="int" resultType="orderViewVo">
    		select * from users_order_view where users_no=#{no}
    </select>
    
    <insert id="insertOrder" parameterType="orderVo">
    	<selectKey keyProperty="no" resultType="int" order="BEFORE">
    		select orders_seq.nextval from dual
    	</selectKey>
    	insert into orders(no,users_no,users_address_no,
		order_status_no,total_price,order_request)
		values(#{no}, #{usersNo},
		#{usersAddressNo}, 1 , #{totalPrice},#{orderRequest})
    </insert>
    

    
    
	<!-- 지효가 만든거 시작 -->
	<select id="adminSelectAll" resultType="map">
		select * from adminOrderListView
	</select>
	
	<!-- 주문관리 리스트 검색시 사용하는 조건절 -->
	<sql id="adminOrderListWhere">
		where REGDATE >= #{startDay}
		<![CDATA[
			and REGDATE < to_date(#{endDay})+1 
		]]>
		<if test="officeNo!=0">
			and officeNo = #{officeNo}
		</if>
		<if test="statusNo!=null and statusNo!=''">
			and statusNo = #{statusNo}
		</if>
		<if test="userEmail!=null and userEmail!=''">
			and userEmail like '%' || #{userEmail} || '%'
		</if>
	</sql>
	
	<!-- 주문관리 리스트 검색 쿼리 -->
    <select id="adminSelectOrderList" parameterType="orderSearchVo" 
    	resultType="map">
    	select *
		from
		(
		    select rownum as RNUM, A.*
		    from
		    (
				select * from adminOrderListView
				<include refid="adminOrderListWhere"></include>
		    )A
		)
		where RNUM > #{firstRecordIndex} 
		<![CDATA[
			and RNUM <= #{firstRecordIndex} + #{recordCountPerPage}
		]]>
    </select>
    
    <!-- 주문관리 리스트 검색에 필요한 총 레코드 수 조회 -->
    <select id="adminSelectTotalRecord" parameterType="orderSearchVo" resultType="int">
		select count(*) from adminOrderListView
		<include refid="adminOrderListWhere"></include>
	</select>
	
	<!-- 주문관리 - 주문상세 조회하는 쿼리 -->
	<select id="adminOrderDetailView2" parameterType="int" resultType="map">
		select * from adminOrderDetailView2
		where orderNo = #{orderNo}
	</select>
	
	<resultMap type="AdminOrderDetailVO" id="adminOrderDetailResultMap">
		<association property="adminOrderDetailVo" column="orderNo" javaType="map">
			<id column="orderNo" jdbcType="BIGINT" property="orderNo"/>
			<result column="userEmail" jdbcType="VARCHAR" property="userEmail"/>
			<result column="officeName" jdbcType="VARCHAR" property="officeName"/>
			<result column="status" jdbcType="VARCHAR" property="status"/>
			<result column="regdate" jdbcType="TIMESTAMP" property="regdate"/>
			<result column="address" jdbcType="VARCHAR" property="address"/>
			<result column="pickupDriver" jdbcType="VARCHAR" property="pickupDriver"/>
			<result column="deliveryDriver" jdbcType="VARCHAR" property="deliveryDriver"/>
			<result column="paymentNo" jdbcType="BIGINT" property="paymentNo"/>
			<result column="paymentDate" jdbcType="TIMESTAMP" property="paymentDate"/>
		</association>
		
		<collection property="adminOrderDetailList" column="orderNo"
			javaType="ArrayList" ofType="map" select="adminOrderDetailView2">	
		</collection>
	</resultMap>
	
	<select id="adminSelectOrderDetail" parameterType="int" 
		resultMap="adminOrderDetailResultMap">
		select * from adminOrderDetailView
		where orderNo = #{orderNo}
	</select>
	
	<!-- 주문상태 : 세탁중 => 배송대기 처리 -->
	<update id="adminOrderStatusUpdate" parameterType="int">
		update orders
		set ORDER_STATUS_NO = 4
		where NO = #{orderNo}
	</update>
	<!-- 지효가 만든거 끝 -->
	
	<select id="selectRecentOrderNo" parameterType="int" resultType="int">
		SELECT no from
		(
		select no,users_no,
		RANK() over(partition by users_no order by regdate desc) as rnk
		from orders
		)
		where rnk ='1' and users_no = #{no}
	</select>  
	
	<insert id="insertOrderDetails" parameterType="orderDetailVo" >
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			select order_detail_seq.nextval from dual
		</selectKey>
			insert into order_detail (no,order_no,category_no,quan,sum)
			values(#{no},#{orderNo},#{categoryNo},#{quan},#{sum})
	</insert>
	
	
	<insert id="insertPointList" parameterType ="map"> 
		<selectKey keyProperty="no" resultType="int" order = "BEFORE">
			select point_list_seq.nextval from dual
		</selectKey>
			insert into point_list (no,users_no,order_no,point)
			values (#{no}, #{usersNo},#{orderNo},#{point})
	</insert>
	
	<update id="updateUserPoint" parameterType="userVo">
		update users
		set point = #{point}
		where no= #{no}
	</update>
	
	<update id="updatePaymentDate" parameterType ="int">
		update orders
		set payment_date = sysdate
		where no = #{no}
	</update> 
	
	
	
	
</mapper>